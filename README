@ifaxity/semantic-release-nuget
===================================

[**semantic-release**](https://github.com/semantic-release/semantic-release) plugin to package and publish a package via NuGet using the dotnet-cli.

[![Codacy grade](https://img.shields.io/codacy/grade/a0c628b128c044269faefc1da74382f7?style=for-the-badge&logo=codacy)](https://www.codacy.com/gh/iFaxity/semantic-release-nuget/dashboard)
[![npm (scoped)](https://img.shields.io/npm/v/semantic-release-nuget?style=for-the-badge&logo=npm)](https://npmjs.org/package/@ifaxity/semantic-release-nuget)
[![npm bundle size (scoped)](https://img.shields.io/bundlephobia/min/semantic-release-nuget?label=Bundle%20size&style=for-the-badge)](https://npmjs.org/package/@ifaxity/semantic-release-nuget)
[![npm bundle size (scoped)](https://img.shields.io/bundlephobia/minzip/semantic-release-nuget?label=Bundle%20size%20%28gzip%29&style=for-the-badge)](https://npmjs.org/package/@ifaxity/semantic-release-nuget)

| Step               | Description                                                                                             |
|--------------------|---------------------------------------------------------------------------------------------------------|
| `verifyConditions` | Execute a shell command to verify if the release should happen.                                         |
| `prepare`          | Execute a shell command to prepare the release.                                                         |
| `publish`          | Execute a shell command to publish the release.                                                         |


Install
--------------------------

```bash
$ npm i --save-dev @ifaxity/semantic-release-nuget
```


Usage
--------------------------

The plugin can be configured in the [**semantic-release** configuration file](https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#configuration):

```json
{
  "plugins": [
    "@semantic-release/commit-analyzer",
    "@semantic-release/release-notes-generator",
    "@ifaxity/semantic-release-dotnet",
    ["@ifaxity/semantic-release-nuget", {
      "push": {
        "apiKey": "abc...",
        "source": "https://api.nuget.org/v3/index.json"
      }
    }]
  ]
}
```

With this example:
- The project will be built and versioned by the plugin @ifaxity/semantic-release-dotnet
- The package will be prepared by @ifaxity/semantic-release-nuget
- The package will be published by @ifaxity/semantic-release-nuget


**Note**: it's recommended to include @ifaxity/semantic-release-dotnet directly before this plugin or some other custom way.


Configuration
--------------------------

### Nuget registry authentication

The Nuget authentication configuration is **required** and can be set via [environment variables](#environment-variables) or via options.

**Notes**:
- Both `push.source` and `push.apiKey` is required.

### Environment variables

| Variable       | Description                                                                              |
| -------------- | ---------------------------------------------------------------------------------------- |
| `NUGET_SOURCE` | Nuget API Key, (to create one for nuget.org go to https://www.nuget.org/account/apikeys) |
| `NUGET_TOKEN`  | Nuget source url (for nuget.org this is https://api.nuget.org/v3/index.json)             |

### Options

| Options      | Description                                                                                                         | Default                                                                                                                          |
|--------------|---------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------|
| `npmPublish` | Whether to publish the `npm` package to the registry. If `false` the `package.json` version will still be updated.  | `false` if the `package.json` [private](https://docs.npmjs.com/files/package.json#private) property is `true`, `true` otherwise. |
| `pkgRoot`    | Directory path to publish.                                                                                          | `.`                                                                                                                              |
| `tarballDir` | Directory path in which to write the package tarball. If `false` the tarball is not be kept on the file system.     | `false`                                                                                                                          |


License
--------------------------

[MIT](./LICENSE)
